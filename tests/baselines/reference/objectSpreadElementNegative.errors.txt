tests/cases/conformance/es6/destructuring/objectSpreadElementNegative.ts(13,30): error TS2339: Property 'x' does not exist on type '{ ...PublicX, ...PrivateOptionalX }'.
tests/cases/conformance/es6/destructuring/objectSpreadElementNegative.ts(16,15): error TS2696: Spread properties must be identifiers, property accesses, or object literals.
tests/cases/conformance/es6/destructuring/objectSpreadElementNegative.ts(17,15): error TS2696: Spread properties must be identifiers, property accesses, or object literals.
tests/cases/conformance/es6/destructuring/objectSpreadElementNegative.ts(20,36): error TS2300: Duplicate identifier 'b'.
tests/cases/conformance/es6/destructuring/objectSpreadElementNegative.ts(20,53): error TS2300: Duplicate identifier 'b'.
tests/cases/conformance/es6/destructuring/objectSpreadElementNegative.ts(25,12): error TS2339: Property 'b' does not exist on type '{ ...{ b: number; } }'.


==== tests/cases/conformance/es6/destructuring/objectSpreadElementNegative.ts (6 errors) ====
    let o = { a: 1, b: 'no' }
    
    /// private propagates
    class PrivateOptionalX {
        private x?: number;
    }
    class PublicX {
        public x: number;
    }
    let privateOptionalx: PrivateOptionalX;
    let publicx: PublicX;
    let o3 = { ...publicx, ...privateOptionalx };
    let sn: string | number = o3.x; // error, x is private
                                 ~
!!! error TS2339: Property 'x' does not exist on type '{ ...PublicX, ...PrivateOptionalX }'.
    
    // expressions are not allowed
    let o1 = { ...1 + 1 };
                  ~~~~~
!!! error TS2696: Spread properties must be identifiers, property accesses, or object literals.
    let o2 = { ...(1 + 1) };
                  ~~~~~~~
!!! error TS2696: Spread properties must be identifiers, property accesses, or object literals.
    
    // literal repeats are not allowed, but spread repeats are fine
    let duplicated = { b: 'bad', ...o, b: 'bad', ...o2, b: 'bad' }
                                       ~
!!! error TS2300: Duplicate identifier 'b'.
                                                        ~
!!! error TS2300: Duplicate identifier 'b'.
    let duplicatedSpread = { ...o, ...o }
    
    // write-only properties get skipped
    let setterOnly = { ...{ set b (bad: number) { } } };
    setterOnly.b = 12; // error, 'b' does not exist
               ~
!!! error TS2339: Property 'b' does not exist on type '{ ...{ b: number; } }'.
    