=== tests/cases/conformance/types/spread/objectSpreadIndexSignature.ts ===
class C {
>C : C

    a: number;
>a : number

    c: boolean;
>c : boolean
}
let c: { ...C, b: string, c?: string, [n: number]: string };
>c : { [n: number]: string; b: string; c: string | boolean; a: number; }
>C : C
>b : string
>c : string
>n : number

let n: number = c.a;
>n : number
>c.a : number
>c : { [n: number]: string; b: string; c: string | boolean; a: number; }
>a : number

let s: string = c[12];
>s : string
>c[12] : string
>c : { [n: number]: string; b: string; c: string | boolean; a: number; }
>12 : 12

interface Indexed {
>Indexed : Indexed

    [n: string]: number;
>n : string

    a: number;
>a : number
}
let i: { ...Indexed, b: number };
>i : { [n: string]: number; b: number; a: number; }
>Indexed : Indexed
>b : number

n = i[101];
>n = i[101] : number
>n : number
>i[101] : number
>i : { [n: string]: number; b: number; a: number; }
>101 : 101

n = i.b;
>n = i.b : number
>n : number
>i.b : number
>i : { [n: string]: number; b: number; a: number; }
>b : number

interface Indexed2 {
>Indexed2 : Indexed2

    [n: string]: boolean;
>n : string

    c: boolean;
>c : boolean
}
let ii: { ...Indexed, ...Indexed2, b: boolean, d: number };
>ii : { [x: string]: number | boolean; b: boolean; d: number; c: boolean; a: number; }
>Indexed : Indexed
>Indexed2 : Indexed2
>b : boolean
>d : number

let nb: number | boolean = ii[1001];
>nb : number | boolean
>ii[1001] : number | boolean
>ii : { [x: string]: number | boolean; b: boolean; d: number; c: boolean; a: number; }
>1001 : 1001

